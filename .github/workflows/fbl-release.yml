name: Manual Release

on:
  workflow_dispatch:

jobs:
  windows-release:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches
      - uses: "./.github/actions/checkout"
        with:
          rust-toolchain-suffix: "-msvc"
          github-token: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}

      - name: Set up dev dependencies
        shell: bash
        run: |
          choco install -y --force --version=18.1.6 llvm
          choco install -y cmake ninja

      - name: Build
        env:
          RUST_BACKTRACE: full
        shell: bash
        run: |
          pushd shards
          ./bootstrap
          popd
          pushd formabble
          cmake -Bbuild -G Ninja \
            "-DCMAKE_C_COMPILER:FILEPATH=C:\Program Files\LLVM\bin\clang.exe" \
            "-DCMAKE_CXX_COMPILER:FILEPATH=C:\Program Files\LLVM\bin\clang++.exe" \
            "-DRUST_DEFAULT_TARGET_PATH=C:\shards-rust-target" \
            "-DSHARDS_MIN_DEBUG_INFO=ON" \
            "-DSHARDS_DEFAULT_STDOUT_LOG_LEVEL=SPDLOG_LEVEL_INFO" \
            "-DSHARDS_DEFAULT_FILE_LOG_LEVEL=SPDLOG_LEVEL_DEBUG" \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo
          echo "Building shards"
          cmake --build build --target fbl

      - id: release
        uses: "./.github/actions/make-release-zip"
        with:
          in-files: "'fbl.exe', 'fbl.pdb', 'crsqlite.dll', 'crsqlite.pdb'"
          out-name: formabble-win64
          github-token: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}

  macosx-arm64-release:
    runs-on: macos-latest # should be M1/ARM64
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches
      - uses: "./.github/actions/checkout"
        with:
          github-token: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}

      - name: Build
        shell: bash
        run: |
          pushd shards
          ./bootstrap
          popd
          pushd formabble
          cmake -Bbuild -GNinja -DCMAKE_BUILD_TYPE=Release
          cmake --build build --target fbl

      - id: release
        uses: "./.github/actions/make-release-zip"
        with:
          in-files: "'fbl', 'fbl.dSYM'"
          out-name: formabble-macosx-arm64
          github-token: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}

  macosx-x86-release:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches
      - uses: "./.github/actions/checkout"
        with:
          github-token: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}

      - name: Build host tools
        shell: bash
        run: |
          pushd shards
          ./bootstrap
          cmake -Bbuild -GNinja -DCMAKE_BUILD_TYPE=Release -DSKIP_HEAVY_INLINE=1
          cmake --build build --target shards
          echo "SHARDS_COMMAND=`pwd`/build/shards" >> $GITHUB_ENV

      - name: Build
        shell: bash
        run: |
          pushd formabble
          cmake -Bbuild -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES="x86_64"
          cmake --build build --target fbl

      - id: release
        uses: "./.github/actions/make-release-zip"
        with:
          in-files: "'fbl', 'fbl.dSYM'"
          out-name: formabble-macosx-x86_64
          github-token: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}
          

  web-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches
      - uses: "./.github/actions/checkout"
        with:
          github-token: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}

      - name: Checkout emsdk
        uses: actions/checkout@v3
        with:
          repository: emscripten-core/emsdk
          path: emsdk
          fetch-depth: 1

      - name: Set up dependencies
        shell: bash
        run: |
          sudo apt-get -y update
          sudo apt-get -y install build-essential git cmake wget ninja-build
          rustup +$RUSTUP_TOOLCHAIN target add wasm32-unknown-emscripten
          rustup +$RUSTUP_TOOLCHAIN component add rust-src
          pushd emsdk
          ./emsdk install 3.1.59
          ./emsdk activate 3.1.59

      - name: Build host tools
        shell: bash
        run: |
          pushd shards
          ./bootstrap
          cmake -Bbuild -GNinja -DCMAKE_BUILD_TYPE=Release -DSKIP_HEAVY_INLINE=1
          cmake --build build --target shards
          echo "SHARDS_COMMAND=`pwd`/build/shards" >> $GITHUB_ENV

      - name: Build
        shell: bash
        run: |
          source emsdk/emsdk_env.sh
          pushd formabble
          cmake -Bbuild -GNinja -DCMAKE_BUILD_TYPE=Release -DSKIP_HEAVY_INLINE=1 -DUSE_LTO=0 -DEMSCRIPTEN_PTHREADS=ON -DCMAKE_TOOLCHAIN_FILE=$EMSDK/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake
          cmake --build build --target fbl

      - id: release
        uses: "./.github/actions/make-release-zip"
        with:
          in-files: "'fbl.js', 'fbl.wasm'"
          out-name: formabble-wasm
          github-token: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}

  android-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches
      - uses: "./.github/actions/checkout"
        with:
          github-token: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}

      - name: Set up dependencies
        shell: bash
        run: |
          rustup +$RUSTUP_TOOLCHAIN target add aarch64-linux-android
          rustup +$RUSTUP_TOOLCHAIN component add rust-src

          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "build-tools;33.0.2"
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "platforms;android-33"


      - name: Build host tools
        shell: bash
        run: |
          pushd shards
          ./bootstrap
          cmake -Bbuild -GNinja -DCMAKE_BUILD_TYPE=Release -DSKIP_HEAVY_INLINE=1
          cmake --build build --target shards
          echo "SHARDS_COMMAND=`pwd`/build/shards" >> $GITHUB_ENV

      - name: Build
        shell: bash
        run: |
          source emsdk/emsdk_env.sh
          pushd formabble
          ANDROID_TOOLCHAIN=/usr/local/lib/android/sdk/ndk/25.2.9519653
          cmake -Bbuild -GNinja -DCMAKE_BUILD_TYPE=Release \
            -DANDROID_ABI=arm64-v8a \
            -DANDROID_PLATFORM=android-33 \
            -DANDROID_SDK_ROOT=$ANDROID_SDK_ROOT \
            -DANDROID_TOOLS_VERSION=34.0.0 \
            -DJAVA_HOME=$JAVA_HOME_11_X64 \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_TOOLCHAIN/build/cmake/android.toolchain.cmake
          cmake --build build --target fbl

      - id: release
        uses: "./.github/actions/make-release-zip"
        with:
          in-files: "'fbl.apk'"
          out-name: formabble-wasm
          github-token: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}